{"version":3,"sources":["api/employeesAPI.js","store/months.js","components/Birthdays.js","store/alphabet.js","components/Employees.js","App.js","reportWebVitals.js","index.js"],"names":["employeesAPI","getEmployees","a","fetch","then","response","json","months","1","2","3","4","5","6","7","8","9","10","11","12","Birthdays","props","employees","checkedEmployees","className","length","Object","keys","map","month","filter","employee","parseInt","dob","split","lastName","firstName","search","id","alphabet","Employees","changeBdays","letter","startsWith","localEmployee","type","checked","onChange","e","target","App","useState","setEmployees","key","defaultValue","stored","localStorage","getItem","initial","JSON","parse","value","setValue","useEffect","setItem","stringify","useLocalStorage","setBdays","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0a3bc39e.chunk.js","sourcesContent":["export const employeesAPI = {\r\n    getEmployees: async() => {\r\n        return await fetch(`https://yalantis-react-school-api.yalantis.com/api/task0/users`)\r\n            .then(response => response.json())\r\n    }\r\n}","const months = {\r\n    1: \"January\",\r\n    2: \"February\",\r\n    3: \"March\",\r\n    4: \"April\",\r\n    5: \"May\",\r\n    6: \"June\",\r\n    7: \"July\",\r\n    8: \"August\",\r\n    9: \"September\",\r\n    10: \"October\",\r\n    11: \"November\",\r\n    12: \"December\"\r\n}\r\n\r\nexport default months","import  months from '../store/months'\r\n\r\nexport default function Birthdays (props) {\r\n    const employees = props.checkedEmployees\r\n    \r\n    return <div className=\"birthdays\">\r\n        <h1 className=\"title\">Birthdays</h1>\r\n        {(employees.length > 0)\r\n        ? Object.keys(months).map(month => (\r\n            (employees.filter(employee => months[parseInt(employee.dob.split('-')[1])] === months[month]).length > 0)\r\n            ? <div key={month}>\r\n                 <h2>{months[month]}</h2>\r\n                 {employees.filter(employee => months[parseInt(employee.dob.split('-')[1])] === months[month]).map(employee => (\r\n                <div key={employee.id}>\r\n                    <span><strong>{employee.lastName} {employee.firstName}</strong>\r\n                    &nbsp;- {employee.dob.split('-')[2].search('T')}\r\n                    &nbsp;{months[parseInt(employee.dob.split('-')[1])]}\r\n                    &nbsp;{employee.dob.split('-')[0]} year\r\n                    </span>\r\n                </div> \r\n                ))}\r\n            </div>\r\n            : <div key={month}></div>\r\n        ))\r\n        : <div>No selected employees</div>}\r\n    </div>\r\n}","const alphabet = [\r\n    'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I','J',\r\n    'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T',\r\n    'U', 'V', 'W', 'X', 'Y', 'Z'\r\n]\r\n\r\nexport default alphabet\r\n\r\n// String.fromCharCode(97).toUpperCase()","import React from 'react'\r\nimport alphabet from '../store/alphabet'\r\n\r\nexport default function Employees ({employees, checkedEmployees, changeBdays}) {\r\n\r\n    return <div>\r\n        <h1 className=\"title\">Employees</h1>\r\n        <div className=\"employeeList\">\r\n        {alphabet.map(letter => <div key={letter} className=\"letterGroup\">\r\n                        <h3>{letter}</h3>\r\n                        <div className=\"letterEmployees\">\r\n                        {(employees.filter(employee => employee.lastName.startsWith(letter)).length > 0) \r\n                            ? employees.filter(employee => employee.lastName.startsWith(letter))\r\n                                .map(employee => <div key={employee.id}>\r\n                                        <span className=\"employeeName\">{employee.lastName} {employee.firstName} </span>\r\n                                        {(checkedEmployees.filter(localEmployee => localEmployee.id === employee.id).length > 0)\r\n                                            ? <input type=\"checkbox\" checked={true} onChange={(e) => changeBdays(employee.id, e.target.checked)} />\r\n                                            : <input type=\"checkbox\" checked={false} onChange={(e) => changeBdays(employee.id, e.target.checked)} />\r\n                                        }             \r\n                                    </div>)\r\n                            : <div> â€” </div>\r\n                        }</div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    </div>\r\n}","import React, { useState, useEffect } from 'react'\nimport { employeesAPI } from './api/employeesAPI'\nimport './App.css'\nimport Birthdays from './components/Birthdays'\nimport Employees from './components/Employees'\n\nexport default function App() {\n\n  const useLocalStorage = (key, defaultValue) => {\n    const stored = localStorage.getItem(key)\n    const initial = stored ? JSON.parse(stored) : defaultValue\n    const [value, setValue] = useState(initial)\n\n    useEffect(() => {\n      localStorage.setItem(key, JSON.stringify(value))\n    })\n\n    return [value, setValue]\n  }\n\n  const [employees, setEmployees] = useState([])\n  const [checkedEmployees, setBdays] = useLocalStorage('localEmployees', [])\n\n  const changeBdays = (id, checked) => {\n    (checked) \n      ? setBdays([...checkedEmployees, ...employees.filter(employee => employee.id === id)])\n      : setBdays(checkedEmployees.filter(employee => employee.id !== id)) \n  }\n\n  useEffect(() => {\n    employeesAPI.getEmployees()\n      .then(response => setEmployees(response))\n  },[])\n    \n  return (\n    <div className=\"App\">\n      <Employees employees={employees} changeBdays={changeBdays} checkedEmployees={checkedEmployees} />\n      <Birthdays checkedEmployees={checkedEmployees} />\n    </div>\n  )\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}